
* Introduction
This is a docker file containing =emacs= and the necessary packages to export your =org-roam= knowledgebase to =mkdocs= compatible markdown.

* How to use
** Example docker compose
- Run the following with =docker compose run emacs-mkdocs-export= or =docker compose run --rm emacs-mkdocs-export=.
- Don't forget to configure the paths, and any necessary configurations in =config/config.el= (see below).
- The resulting =.md= files will be placed in the =output= folder. This is the same folder as the =docs= directory in mkdocs.

#+BEGIN_SRC yaml
  services:
    emacs-mkdocs-export:
      image: ghcr.io/cvanmarcke/emacs-mkdocs-export:latest
      container_name: emacs-mkdocs-export
      volumes:
        - type: bind
          source: path/to/roam
          target: /roam
        - type: bind
          source: path/to/output
          target: /output
        - type: bind
          source: ./cache
          target: /cache
        - type: bind
          source: ./config
          target: /config
#+END_SRC

** Building and running from source
*** Building the container
After cloning the repo, build the docker container:

#+begin_src sh
  docker build -t emacs-mkdocs-export .
#+end_src

*** Running the container
- Remember to change the source paths of the roam folder and output folder.
- The resulting =.md= files will be placed in the =output= folder. This is the same folder as the =docs= directory in mkdocs.

**** Docker compose
Run the docker compose file with =docker compose run emacs-mkdocs-export= or =docker compose run --rm emacs-mkdocs-export=.

#+BEGIN_SRC yaml
  services:
    emacs-mkdocs-export:
      image: emacs-mkdocs-export
      container_name: emacs-mkdocs-export
      volumes:
        - type: bind
          source: path/to/roam
          target: /roam
        - type: bind
          source: path/to/output
          target: /output
        - type: bind
          source: ./cache
          target: /cache
        - type: bind
          source: ./config
          target: /config
#+END_SRC

**** CLI
#+BEGIN_SRC sh
  docker run --rm --name emacs-mkdocs-export --mount type=bind,source=path/to/roam,target=/roam --mount type=bind,source=path/to/output,target=/output --mount type=bind,source=./cache,target=/cache --mount type=bind,source=./config,target=/config emacs-mkdocs-export
#+END_SRC

** Customizing the export
- Modify =/config/config.el= to influence the export process. For more information see the [[https://orgmode.org/manual/Advanced-Export-Configuration.html][org mode manual]].
  - You can modify the =org-publish-project-alist= variable in =/config/config.el=
  - The file will be automatically created after your first run.
- A bibtex file can be provided to export references. The default location is =/config/library.bib=.
- A custom CSL file can also be provided. The default is =springer-vancouver-brackets.csl= and is located in =/config=. If you want to use your own, either replace =springer-vancouver-brackets.csl= with a new one (while keeping the name), or add a new one in the =/config= folder and change the export processor in =/config/config.el= with ~(setq org-cite-export-processors '((t . (csl "YOUR-CSL-FILE.csl" "YOUR-CSL-FILE.csl"))))~.

Default =config/config.el=:
#+begin_src emacs-lisp
  (setq publishing-dir "/output")
  (setq org-publish-project-alist
        `(("roam"
           :base-directory "/roam"
           :recursive t
           :publishing-directory ,publishing-dir
           :with-broken-links     t
           :base-extension "org\\|jpg\\|gif\\|png"
           :publishing-function org-mkdocs-publish-to-md)))

  (setq org-cite-csl-styles-dir "/config")
  (setq org-cite-export-processors '((t . (csl "springer-vancouver-brackets.csl" "springer-vancouver-brackets.csl"))))
  (setq org-cite-global-bibliography '("/config/library.bib"))
#+end_src
